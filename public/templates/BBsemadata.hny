import BBsema;

const NPRODS = 2;       # number of producers
const NCONSS = NPRODS;  # number of consumers

def producer(i):
    produce((i, 0));
    produce((i, 1));
;
def consumer():
    let first = consume() let second = consume():
        assert (first[0] != second[0]) or (first[1] < second[1]);
        atomic:
            received |= { first, second };
        ;
    ;
;
def main():
    await len(received) == (2 * NCONSS);
    assert received == ({ (i, 0) for i in {1..NPRODS} } |
                            { (i, 1) for i in {1..NPRODS} })
    ;
;
received = {};
for i in {1..NPRODS}:
    spawn producer(i);
;
for i in {1..NCONSS}:
    spawn consumer();
;
spawn main();
