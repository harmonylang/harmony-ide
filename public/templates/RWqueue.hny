import synch;
import list;

def V_one():
    if queue == []:
        V(?mutex);
    else:
        let h = head(queue):
            if (h[0] == .read) and (w_entered == 0): V(h[1]);
            elif (h[0] == .write) and ((r_entered + w_entered) == 0): V(h[1]);
            else: V(?mutex);
            ;
        ;
    ;
;
def acquire_rlock(psema):
    P(?mutex);
    if (w_entered > 0) or (queue != []):
        queue = append(queue, (.read, psema)); V(?mutex);
        P(psema); queue = tail(queue);
    ;
    r_entered += 1;
    V_one();
;
def release_rlock():
    P(?mutex); r_entered -= 1; V_one();
;
def acquire_wlock(psema):
    P(?mutex);
    if (r_entered + w_entered) > 0:
        queue = append(queue, (.write, psema)); V(?mutex);
        P(psema); queue = tail(queue);
    ;
    w_entered = 1;
    V_one();
;
def release_wlock():
    P(?mutex); w_entered = 0; V_one();
;
mutex = Semaphore(1);
r_entered, w_entered = 0, 0;
queue = [];
